pipeline {
    agent any

    environment {
        IMAGE_NAME = "deepsaha288/mern-app"
        KUBECONFIG = credentials('kubeconfig')
    }

    tools {
        nodejs "NodeJS 18"
    }

    stages {
    stage('Checkout') {
        steps {
            git credentialsId: 'github-creds', url: 'https://github.com/deepsaha288/delat-capita-Assignment.git'
        }
        }

        stage('Build Docker Image') {
        steps {
            dir('mern-app') {
            sh 'npm install'
            sh 'docker build -t $IMAGE_NAME:latest .'
            }
        }
    }

    stage('Push Image to DockerHub') {
        steps {
            script {
            docker.withRegistry('', 'dockerhub-creds') {
                docker.image("$IMAGE_NAME:latest").push()
            }
            }
        }
    }

    stage('Deploy to EKS') {
        steps {
            withCredentials([
            [$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-creds']
            ]) {
            sh '''
            aws eks --region us-east-1 update-kubeconfig --name Client-EKS-Cluster
            kubectl apply -f manifests/namespace.yaml
            kubectl apply -f manifests/certificate.yaml
            kubectl apply -f manifests/mongo-deployment.yaml
            kubectl apply -f manifests/mongo-service.yaml
            kubectl apply -f manifests/express-mongo-deployment.yaml
            kubectl apply -f manifests/express-mongo-service.yaml
            kubectl apply -f manifests/app-deployment.yaml
            kubectl apply -f manifests/app-service.yaml
            kubectl apply -f manifests/ingress.yaml
            '''
            }
        }
        }
    }
}
// Post actions can be added here if needed
    post {
        always {
        echo 'Cleaning up...'
        sh 'docker rmi $IMAGE_NAME:latest || true'
        }
        success {
        echo 'Pipeline completed successfully!'
        }
        failure {
        echo 'Pipeline failed!'
        }
    }
